{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Documents\\\\JS\\\\Ask-PDF\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Document, Page, pdfjs } from \"react-pdf\";\n// import { Box, TextField, Button, Typography } from '@mui/material';\n\n// function App() {\n//   const [pdfUrl, setPdfUrl] = useState('');\n//   const [query, setQuery] = useState('');\n//   const [chatResponse, setChatResponse] = useState('');\n//   const [sID, setSID] = useState('');\n\n//   useEffect(() => { pdfjs.GlobalWorkerOptions.workerSrc =`https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;});\n\n//   const handleFileChange = async (event) => {\n//     const file = event.target.files[0];\n//     const formData = new FormData();\n//     formData.append('pdf', file);\n\n//     try {\n//       const response = await axios.post('http://localhost:5000/upload', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n//       console.log(response);\n//       const documentId = response.data.yourSourceId;\n//       setSID(response.data.chatPdfSourceId);\n//       setPdfUrl(`http://localhost:5000/pdf/${documentId}`);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n//   const handleQuerySubmit = async () => {\n//     try {\n//       console.log(sID);\n//       console.log(query);\n//       const response = await axios.post('http://localhost:5000/chats', {\n//         chatPdfSourceId: sID, \n//         query\n//       });\n//       setChatResponse(response.data.text);\n//     } catch (error) {\n//       console.error(\"chat error\", error);\n//     }\n//   }; \n\n//   return (\n//     <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 2 }}>\n//       <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', width: '100%', p: 2 }}>\n//         <Box sx={{ width: '50%' }}>\n//           <Box sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n//             <Typography variant=\"h6\">Upload PDF:</Typography>\n//             <input type=\"file\" onChange={handleFileChange} />\n//           </Box>\n//           {pdfUrl && (\n//             <Box sx={{ width: '100%', height: '80vh', overflow: 'auto' }}>\n//               <Document file={pdfUrl}>\n//                 <Page pageNumber={1} />\n//               </Document>\n//             </Box>\n//           )}\n//         </Box>\n//         <Box sx={{ width: '50%' }}>\n//           <Typography variant=\"h6\">Chat with PDF:</Typography>\n//           <TextField\n//             variant=\"outlined\"\n//             fullWidth\n//             value={query}\n//             onChange={(e) => setQuery(e.target.value)}\n//             placeholder=\"Ask your question...\"\n//           />\n//           <Button variant=\"contained\" onClick={handleQuerySubmit} sx={{ mt: 1 }}>\n//             Ask\n//           </Button>\n//           {chatResponse && (\n//             <Box sx={{ mt: 2 }}>\n//               <Typography variant=\"body1\">{chatResponse}</Typography>\n//             </Box>\n//           )}\n//         </Box>\n//       </Box>\n//     </Box>\n//   );\n// }\n\n// export default App;\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { Box, TextField, Button, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pdfUrl, setPdfUrl] = useState('');\n  const [query, setQuery] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [sID, setSID] = useState('');\n  const [numPages, setNumPages] = useState(0);\n  useEffect(() => {\n    pdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n    // Fetch chat history when the component mounts\n    fetchChatHistory();\n  }, []);\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append('pdf', file);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const documentId = response.data.yourSourceId;\n      setSID(response.data.chatPdfSourceId);\n      setPdfUrl(`http://localhost:5000/pdf/${documentId}`);\n      // Fetch chat history after uploading a new PDF\n      fetchChatHistory();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleQuerySubmit = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/chats', {\n        chatPdfSourceId: sID,\n        query\n      });\n\n      // Update chat history with user query and API response\n      setChatHistory([...chatHistory, {\n        role: 'user',\n        content: query\n      }, {\n        role: 'chatpdf',\n        content: response.data.text\n      }]);\n      setQuery('');\n    } catch (error) {\n      console.error(\"chat error\", error);\n    }\n  };\n  const fetchChatHistory = async () => {\n    try {\n      if (sID) {\n        const response = await axios.get(`http://localhost:5000/chats/history/${sID}`);\n        setChatHistory(response.data.chatHistory);\n      }\n    } catch (error) {\n      console.error(\"Error fetching chat history\", error);\n    }\n  };\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '100%',\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '50%',\n          height: '80vh',\n          overflow: 'auto'\n        },\n        children: pdfUrl && /*#__PURE__*/_jsxDEV(Document, {\n          file: pdfUrl,\n          onLoadSuccess: onDocumentLoadSuccess,\n          children: Array.from(new Array(numPages), (el, index) => /*#__PURE__*/_jsxDEV(Page, {\n            pageNumber: index + 1\n          }, `page_${index + 1}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '50%',\n          height: '80vh',\n          overflowY: 'auto',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Chat with PDF:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: 1,\n            display: 'block',\n            marginBottom: 2\n          },\n          children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: chat.role === 'user' ? 'row-reverse' : 'row',\n              alignItems: 'center',\n              marginBottom: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                backgroundColor: chat.role === 'user' ? '#DCF8C6' : '#E8E8E8',\n                padding: 1,\n                borderRadius: '8px',\n                maxWidth: '70%'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: chat.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '50%',\n        marginTop: 2,\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Upload PDF:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '50%',\n        alignItems: 'center',\n        marginTop: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        fullWidth: true,\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Ask your question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleQuerySubmit,\n        sx: {\n          marginLeft: 1\n        },\n        children: \"Ask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YQor9uHxaZUIKqQmPFy2460MO30=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Document","Page","pdfjs","Box","TextField","Button","Typography","jsxDEV","_jsxDEV","App","_s","pdfUrl","setPdfUrl","query","setQuery","chatHistory","setChatHistory","sID","setSID","numPages","setNumPages","GlobalWorkerOptions","workerSrc","version","fetchChatHistory","handleFileChange","event","file","target","files","formData","FormData","append","response","post","headers","documentId","data","yourSourceId","chatPdfSourceId","error","console","handleQuerySubmit","role","content","text","get","onDocumentLoadSuccess","sx","display","flexDirection","alignItems","p","children","justifyContent","width","height","overflow","onLoadSuccess","Array","from","el","index","pageNumber","fileName","_jsxFileName","lineNumber","columnNumber","overflowY","variant","flex","marginBottom","map","chat","backgroundColor","padding","borderRadius","maxWidth","marginTop","type","onChange","fullWidth","value","e","placeholder","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/acer/Documents/JS/Ask-PDF/client/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Document, Page, pdfjs } from \"react-pdf\";\n// import { Box, TextField, Button, Typography } from '@mui/material';\n\n// function App() {\n//   const [pdfUrl, setPdfUrl] = useState('');\n//   const [query, setQuery] = useState('');\n//   const [chatResponse, setChatResponse] = useState('');\n//   const [sID, setSID] = useState('');\n\n//   useEffect(() => { pdfjs.GlobalWorkerOptions.workerSrc =`https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;});\n\n//   const handleFileChange = async (event) => {\n//     const file = event.target.files[0];\n//     const formData = new FormData();\n//     formData.append('pdf', file);\n\n//     try {\n//       const response = await axios.post('http://localhost:5000/upload', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n//       console.log(response);\n//       const documentId = response.data.yourSourceId;\n//       setSID(response.data.chatPdfSourceId);\n//       setPdfUrl(`http://localhost:5000/pdf/${documentId}`);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n//   const handleQuerySubmit = async () => {\n//     try {\n//       console.log(sID);\n//       console.log(query);\n//       const response = await axios.post('http://localhost:5000/chats', {\n//         chatPdfSourceId: sID, \n//         query\n//       });\n//       setChatResponse(response.data.text);\n//     } catch (error) {\n//       console.error(\"chat error\", error);\n//     }\n//   }; \n\n\n//   return (\n//     <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 2 }}>\n//       <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', width: '100%', p: 2 }}>\n//         <Box sx={{ width: '50%' }}>\n//           <Box sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n//             <Typography variant=\"h6\">Upload PDF:</Typography>\n//             <input type=\"file\" onChange={handleFileChange} />\n//           </Box>\n//           {pdfUrl && (\n//             <Box sx={{ width: '100%', height: '80vh', overflow: 'auto' }}>\n//               <Document file={pdfUrl}>\n//                 <Page pageNumber={1} />\n//               </Document>\n//             </Box>\n//           )}\n//         </Box>\n//         <Box sx={{ width: '50%' }}>\n//           <Typography variant=\"h6\">Chat with PDF:</Typography>\n//           <TextField\n//             variant=\"outlined\"\n//             fullWidth\n//             value={query}\n//             onChange={(e) => setQuery(e.target.value)}\n//             placeholder=\"Ask your question...\"\n//           />\n//           <Button variant=\"contained\" onClick={handleQuerySubmit} sx={{ mt: 1 }}>\n//             Ask\n//           </Button>\n//           {chatResponse && (\n//             <Box sx={{ mt: 2 }}>\n//               <Typography variant=\"body1\">{chatResponse}</Typography>\n//             </Box>\n//           )}\n//         </Box>\n//       </Box>\n//     </Box>\n//   );\n// }\n\n// export default App;\n\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { Box, TextField, Button, Typography } from '@mui/material';\n\nfunction App() {\n  const [pdfUrl, setPdfUrl] = useState('');\n  const [query, setQuery] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [sID, setSID] = useState('');\n  const [numPages, setNumPages] = useState(0);\n\n  useEffect(() => {\n    pdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n    // Fetch chat history when the component mounts\n    fetchChatHistory();\n  }, []);\n\n  const handleFileChange = async (event) => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append('pdf', file);\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      const documentId = response.data.yourSourceId;\n      setSID(response.data.chatPdfSourceId);\n      setPdfUrl(`http://localhost:5000/pdf/${documentId}`);\n      // Fetch chat history after uploading a new PDF\n      fetchChatHistory();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleQuerySubmit = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/chats', {\n        chatPdfSourceId: sID,\n        query,\n      });\n\n      // Update chat history with user query and API response\n      setChatHistory([\n        ...chatHistory,\n        { role: 'user', content: query },\n        { role: 'chatpdf', content: response.data.text },\n      ]);\n\n      setQuery('');\n    } catch (error) {\n      console.error(\"chat error\", error);\n    }\n  };\n\n  const fetchChatHistory = async () => {\n    try {\n      if (sID) {\n        const response = await axios.get(`http://localhost:5000/chats/history/${sID}`);\n        setChatHistory(response.data.chatHistory);\n      }\n    } catch (error) {\n      console.error(\"Error fetching chat history\", error);\n    }\n  };\n\n  const onDocumentLoadSuccess = ({ numPages }) => {\n    setNumPages(numPages);\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 2 }}>\n      <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', width: '100%', p: 2 }}>\n        <Box sx={{ width: '50%', height: '80vh', overflow: 'auto' }}>\n          {pdfUrl && (\n            <Document file={pdfUrl} onLoadSuccess={onDocumentLoadSuccess}>\n              {Array.from(new Array(numPages), (el, index) => (\n                <Page key={`page_${index + 1}`} pageNumber={index + 1} />\n              ))}\n            </Document>\n          )}\n        </Box>\n        <Box sx={{ width: '50%', height: '80vh', overflowY: 'auto', display: 'flex', flexDirection: 'column' }}>\n          <Typography variant=\"h6\">Chat with PDF:</Typography>\n          <Box sx={{ flex: 1, display: 'block', marginBottom: 2 }}>\n            {chatHistory.map((chat, index) => (\n              <Box\n                key={index}\n                sx={{\n                  display: 'flex',\n                  flexDirection: chat.role === 'user' ? 'row-reverse' : 'row',\n                  alignItems: 'center',\n                  marginBottom: 1,\n                }}\n              >\n                <Box\n                  sx={{\n                    backgroundColor: chat.role === 'user' ? '#DCF8C6' : '#E8E8E8',\n                    padding: 1,\n                    borderRadius: '8px',\n                    maxWidth: '70%',\n                  }}\n                >\n                  <Typography variant=\"body1\">{chat.content}</Typography>\n                </Box>\n              </Box>\n            ))}\n          </Box>\n        </Box>\n      </Box>\n      <Box></Box>\n        <Box sx={{ width: '50%', marginTop: 2, alignItems: 'center'}}>\n          <Typography variant=\"h6\">Upload PDF:</Typography>\n          <input type=\"file\" onChange={handleFileChange} />\n        </Box>\n        <Box sx={{ width: '50%', alignItems: 'center', marginTop: 2 }}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"Ask your question...\"\n        />\n        <Button variant=\"contained\" onClick={handleQuerySubmit} sx={{ marginLeft: 1 }}>\n          Ask\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}